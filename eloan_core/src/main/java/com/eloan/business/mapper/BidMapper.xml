<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eloan.business.mapper.BidMapper" >
  <resultMap id="BaseResultMap" type="com.eloan.business.domain.Bid" >
    <id property="id" column="id"/>
    <id property="actualRate" column="actualRate"/>
    <id property="actualRate" column="actualRate"/>
    <id property="availableAmount" column="availableAmount"/>
    <id property="bidRequestId" column="bidrequest_id"/>
    <id property="bidTime" column="bidTime"/>
    <id property="bidRequestTitle" column="bidRequestTitle"/>
    <association property="bidUser" javaType="Logininfo" columnPrefix="l_">
     <id property="id" column="id"/>
     <result property="username" column="username"/>
    </association>
  </resultMap>
  
  <insert id="insert" parameterType="com.eloan.business.domain.Bid" useGeneratedKeys="true" keyColumn="id">
  insert into bid(actualRate,availableAmount,bidrequest_id,bidTime,bidRequestTitle,bidUser_id)
  values(#{actualRate},#{availableAmount},#{bidRequestId},#{bidTime},#{bidRequestTitle},#{bidUser.id})
 </insert>
 
 <select id="selectBidById" resultMap="BaseResultMap">
  select b.actualRate,b.availableAmount,b.bidrequest_id,b.bidTime,bidRequestTitle,
  l.id as l_id,l.username as l_username
  from bid b
  left join logininfo l on b.bidUser_id=l.id
  where b.id=#{id}
 </select>
 
  <!--  List<Bid> selectBidByBidRequestId(@Param("bidRequestid")Long bidRequestid); -->
  <select id="selectBidByBidRequestId" resultMap="BaseResultMap">
	 select b.id,b.actualRate,b.bidTime,b.bidRequestTitle,b.availableAmount,b.bidrequest_id,
	  	b.bidUser_id,l.id as l_id,l.username as l_username 
	  from bid b
	  left join logininfo l on b.bidUser_id=l.id
	  where b.bidrequest_id=#{bidRequestid}
  </select>
  
  
  
 <update id="updateBidState">
  	update bid set bidRequestState = #{state} where bidrequest_id = #{bidRequestId}
  </update>
  
 
 
 
 
  <sql id="base_where">
  	<where>
	 <if test="bidUserId != null">
	 	AND b.bidUser_id = #{bidUserId}
   	 </if>
   	 <if test="beginDate!=null"> 
   	 	AND b.bidTime >= #{beginDate}
   	 </if> 
   	 
   	 <if test="endDate!=null"> 
   	 	AND b.bidTime &lt; #{endDate}
   	 </if> 
   	 
   	  <if test="bidRequestState>-1"> 
   	 	AND br.bidRequestState = #{bidRequestState}
   	 </if>
   	 
  	</where>
  </sql>
     
     
  <sql id="base_column">
  	b.id,b.actualRate,b.bidTime,bidRequestTitle,b.availableAmount,b.bidrequest_id,
  	b.bidUser_id,l.id as l_id,l.username as l_username,br.bidRequestState
  </sql>
    
   <!-- int queryForCount(BidQueryObject q); -->
   <select id="queryForCount" resultType="int">
	select count(b.id) 
	 from bid b join bidrequest br on b.bidrequest_id=br.id
	<include refid="base_where" />
  </select>
  
  
  
  
   <!-- List<Bid> query(BidQueryObject q); -->
  <select id="query" resultMap="BaseResultMap">
  	select <include refid="base_column" />
  	 from bid b join bidrequest br on b.bidrequest_id=br.id
  	   join logininfo l on b.bidUser_id =l.id
    <include refid="base_where" />
    <if test="pageSize>0">
    	LIMIT #{start} , #{pageSize}
    </if> 
    
  </select> 



  
   
   
   
</mapper>